/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as VerifyEmailImport } from './routes/verify-email'
import { Route as SignupImport } from './routes/signup'
import { Route as LoginImport } from './routes/login'
import { Route as LayoutImport } from './routes/_layout'
import { Route as DashboardImport } from './routes/_dashboard'
import { Route as LayoutIndexImport } from './routes/_layout/index'
import { Route as LayoutSearchImport } from './routes/_layout/search'
import { Route as LayoutNewPostImport } from './routes/_layout/new-post'
import { Route as DashboardDashboardIndexImport } from './routes/_dashboard/dashboard/index'
import { Route as LayoutPostPostSlugImport } from './routes/_layout/post/$postSlug'
import { Route as LayoutEditPostPostIdImport } from './routes/_layout/edit-post/$postId'
import { Route as DashboardDashboardPublishedImport } from './routes/_dashboard/dashboard/published'
import { Route as DashboardDashboardProfileImport } from './routes/_dashboard/dashboard/profile'
import { Route as DashboardDashboardLibraryImport } from './routes/_dashboard/dashboard/library'
import { Route as DashboardDashboardDraftImport } from './routes/_dashboard/dashboard/draft'

// Create/Update Routes

const VerifyEmailRoute = VerifyEmailImport.update({
  id: '/verify-email',
  path: '/verify-email',
  getParentRoute: () => rootRoute,
} as any)

const SignupRoute = SignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const DashboardRoute = DashboardImport.update({
  id: '/_dashboard',
  getParentRoute: () => rootRoute,
} as any)

const LayoutIndexRoute = LayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutSearchRoute = LayoutSearchImport.update({
  id: '/search',
  path: '/search',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutNewPostRoute = LayoutNewPostImport.update({
  id: '/new-post',
  path: '/new-post',
  getParentRoute: () => LayoutRoute,
} as any)

const DashboardDashboardIndexRoute = DashboardDashboardIndexImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => DashboardRoute,
} as any)

const LayoutPostPostSlugRoute = LayoutPostPostSlugImport.update({
  id: '/post/$postSlug',
  path: '/post/$postSlug',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutEditPostPostIdRoute = LayoutEditPostPostIdImport.update({
  id: '/edit-post/$postId',
  path: '/edit-post/$postId',
  getParentRoute: () => LayoutRoute,
} as any)

const DashboardDashboardPublishedRoute =
  DashboardDashboardPublishedImport.update({
    id: '/dashboard/published',
    path: '/dashboard/published',
    getParentRoute: () => DashboardRoute,
  } as any)

const DashboardDashboardProfileRoute = DashboardDashboardProfileImport.update({
  id: '/dashboard/profile',
  path: '/dashboard/profile',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardDashboardLibraryRoute = DashboardDashboardLibraryImport.update({
  id: '/dashboard/library',
  path: '/dashboard/library',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardDashboardDraftRoute = DashboardDashboardDraftImport.update({
  id: '/dashboard/draft',
  path: '/dashboard/draft',
  getParentRoute: () => DashboardRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_dashboard': {
      id: '/_dashboard'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/verify-email': {
      id: '/verify-email'
      path: '/verify-email'
      fullPath: '/verify-email'
      preLoaderRoute: typeof VerifyEmailImport
      parentRoute: typeof rootRoute
    }
    '/_layout/new-post': {
      id: '/_layout/new-post'
      path: '/new-post'
      fullPath: '/new-post'
      preLoaderRoute: typeof LayoutNewPostImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/search': {
      id: '/_layout/search'
      path: '/search'
      fullPath: '/search'
      preLoaderRoute: typeof LayoutSearchImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_dashboard/dashboard/draft': {
      id: '/_dashboard/dashboard/draft'
      path: '/dashboard/draft'
      fullPath: '/dashboard/draft'
      preLoaderRoute: typeof DashboardDashboardDraftImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/dashboard/library': {
      id: '/_dashboard/dashboard/library'
      path: '/dashboard/library'
      fullPath: '/dashboard/library'
      preLoaderRoute: typeof DashboardDashboardLibraryImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/dashboard/profile': {
      id: '/_dashboard/dashboard/profile'
      path: '/dashboard/profile'
      fullPath: '/dashboard/profile'
      preLoaderRoute: typeof DashboardDashboardProfileImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/dashboard/published': {
      id: '/_dashboard/dashboard/published'
      path: '/dashboard/published'
      fullPath: '/dashboard/published'
      preLoaderRoute: typeof DashboardDashboardPublishedImport
      parentRoute: typeof DashboardImport
    }
    '/_layout/edit-post/$postId': {
      id: '/_layout/edit-post/$postId'
      path: '/edit-post/$postId'
      fullPath: '/edit-post/$postId'
      preLoaderRoute: typeof LayoutEditPostPostIdImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/post/$postSlug': {
      id: '/_layout/post/$postSlug'
      path: '/post/$postSlug'
      fullPath: '/post/$postSlug'
      preLoaderRoute: typeof LayoutPostPostSlugImport
      parentRoute: typeof LayoutImport
    }
    '/_dashboard/dashboard/': {
      id: '/_dashboard/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardDashboardIndexImport
      parentRoute: typeof DashboardImport
    }
  }
}

// Create and export the route tree

interface DashboardRouteChildren {
  DashboardDashboardDraftRoute: typeof DashboardDashboardDraftRoute
  DashboardDashboardLibraryRoute: typeof DashboardDashboardLibraryRoute
  DashboardDashboardProfileRoute: typeof DashboardDashboardProfileRoute
  DashboardDashboardPublishedRoute: typeof DashboardDashboardPublishedRoute
  DashboardDashboardIndexRoute: typeof DashboardDashboardIndexRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardDashboardDraftRoute: DashboardDashboardDraftRoute,
  DashboardDashboardLibraryRoute: DashboardDashboardLibraryRoute,
  DashboardDashboardProfileRoute: DashboardDashboardProfileRoute,
  DashboardDashboardPublishedRoute: DashboardDashboardPublishedRoute,
  DashboardDashboardIndexRoute: DashboardDashboardIndexRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

interface LayoutRouteChildren {
  LayoutNewPostRoute: typeof LayoutNewPostRoute
  LayoutSearchRoute: typeof LayoutSearchRoute
  LayoutIndexRoute: typeof LayoutIndexRoute
  LayoutEditPostPostIdRoute: typeof LayoutEditPostPostIdRoute
  LayoutPostPostSlugRoute: typeof LayoutPostPostSlugRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutNewPostRoute: LayoutNewPostRoute,
  LayoutSearchRoute: LayoutSearchRoute,
  LayoutIndexRoute: LayoutIndexRoute,
  LayoutEditPostPostIdRoute: LayoutEditPostPostIdRoute,
  LayoutPostPostSlugRoute: LayoutPostPostSlugRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof LayoutRouteWithChildren
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/verify-email': typeof VerifyEmailRoute
  '/new-post': typeof LayoutNewPostRoute
  '/search': typeof LayoutSearchRoute
  '/': typeof LayoutIndexRoute
  '/dashboard/draft': typeof DashboardDashboardDraftRoute
  '/dashboard/library': typeof DashboardDashboardLibraryRoute
  '/dashboard/profile': typeof DashboardDashboardProfileRoute
  '/dashboard/published': typeof DashboardDashboardPublishedRoute
  '/edit-post/$postId': typeof LayoutEditPostPostIdRoute
  '/post/$postSlug': typeof LayoutPostPostSlugRoute
  '/dashboard': typeof DashboardDashboardIndexRoute
}

export interface FileRoutesByTo {
  '': typeof DashboardRouteWithChildren
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/verify-email': typeof VerifyEmailRoute
  '/new-post': typeof LayoutNewPostRoute
  '/search': typeof LayoutSearchRoute
  '/': typeof LayoutIndexRoute
  '/dashboard/draft': typeof DashboardDashboardDraftRoute
  '/dashboard/library': typeof DashboardDashboardLibraryRoute
  '/dashboard/profile': typeof DashboardDashboardProfileRoute
  '/dashboard/published': typeof DashboardDashboardPublishedRoute
  '/edit-post/$postId': typeof LayoutEditPostPostIdRoute
  '/post/$postSlug': typeof LayoutPostPostSlugRoute
  '/dashboard': typeof DashboardDashboardIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_dashboard': typeof DashboardRouteWithChildren
  '/_layout': typeof LayoutRouteWithChildren
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/verify-email': typeof VerifyEmailRoute
  '/_layout/new-post': typeof LayoutNewPostRoute
  '/_layout/search': typeof LayoutSearchRoute
  '/_layout/': typeof LayoutIndexRoute
  '/_dashboard/dashboard/draft': typeof DashboardDashboardDraftRoute
  '/_dashboard/dashboard/library': typeof DashboardDashboardLibraryRoute
  '/_dashboard/dashboard/profile': typeof DashboardDashboardProfileRoute
  '/_dashboard/dashboard/published': typeof DashboardDashboardPublishedRoute
  '/_layout/edit-post/$postId': typeof LayoutEditPostPostIdRoute
  '/_layout/post/$postSlug': typeof LayoutPostPostSlugRoute
  '/_dashboard/dashboard/': typeof DashboardDashboardIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/login'
    | '/signup'
    | '/verify-email'
    | '/new-post'
    | '/search'
    | '/'
    | '/dashboard/draft'
    | '/dashboard/library'
    | '/dashboard/profile'
    | '/dashboard/published'
    | '/edit-post/$postId'
    | '/post/$postSlug'
    | '/dashboard'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/login'
    | '/signup'
    | '/verify-email'
    | '/new-post'
    | '/search'
    | '/'
    | '/dashboard/draft'
    | '/dashboard/library'
    | '/dashboard/profile'
    | '/dashboard/published'
    | '/edit-post/$postId'
    | '/post/$postSlug'
    | '/dashboard'
  id:
    | '__root__'
    | '/_dashboard'
    | '/_layout'
    | '/login'
    | '/signup'
    | '/verify-email'
    | '/_layout/new-post'
    | '/_layout/search'
    | '/_layout/'
    | '/_dashboard/dashboard/draft'
    | '/_dashboard/dashboard/library'
    | '/_dashboard/dashboard/profile'
    | '/_dashboard/dashboard/published'
    | '/_layout/edit-post/$postId'
    | '/_layout/post/$postSlug'
    | '/_dashboard/dashboard/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  DashboardRoute: typeof DashboardRouteWithChildren
  LayoutRoute: typeof LayoutRouteWithChildren
  LoginRoute: typeof LoginRoute
  SignupRoute: typeof SignupRoute
  VerifyEmailRoute: typeof VerifyEmailRoute
}

const rootRouteChildren: RootRouteChildren = {
  DashboardRoute: DashboardRouteWithChildren,
  LayoutRoute: LayoutRouteWithChildren,
  LoginRoute: LoginRoute,
  SignupRoute: SignupRoute,
  VerifyEmailRoute: VerifyEmailRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_dashboard",
        "/_layout",
        "/login",
        "/signup",
        "/verify-email"
      ]
    },
    "/_dashboard": {
      "filePath": "_dashboard.tsx",
      "children": [
        "/_dashboard/dashboard/draft",
        "/_dashboard/dashboard/library",
        "/_dashboard/dashboard/profile",
        "/_dashboard/dashboard/published",
        "/_dashboard/dashboard/"
      ]
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/new-post",
        "/_layout/search",
        "/_layout/",
        "/_layout/edit-post/$postId",
        "/_layout/post/$postSlug"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/signup": {
      "filePath": "signup.tsx"
    },
    "/verify-email": {
      "filePath": "verify-email.tsx"
    },
    "/_layout/new-post": {
      "filePath": "_layout/new-post.tsx",
      "parent": "/_layout"
    },
    "/_layout/search": {
      "filePath": "_layout/search.tsx",
      "parent": "/_layout"
    },
    "/_layout/": {
      "filePath": "_layout/index.tsx",
      "parent": "/_layout"
    },
    "/_dashboard/dashboard/draft": {
      "filePath": "_dashboard/dashboard/draft.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/dashboard/library": {
      "filePath": "_dashboard/dashboard/library.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/dashboard/profile": {
      "filePath": "_dashboard/dashboard/profile.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/dashboard/published": {
      "filePath": "_dashboard/dashboard/published.tsx",
      "parent": "/_dashboard"
    },
    "/_layout/edit-post/$postId": {
      "filePath": "_layout/edit-post/$postId.tsx",
      "parent": "/_layout"
    },
    "/_layout/post/$postSlug": {
      "filePath": "_layout/post/$postSlug.tsx",
      "parent": "/_layout"
    },
    "/_dashboard/dashboard/": {
      "filePath": "_dashboard/dashboard/index.tsx",
      "parent": "/_dashboard"
    }
  }
}
ROUTE_MANIFEST_END */
